#!/usr/bin/env python
import unittest
import evecentral

class TestEveCentralMethods(unittest.TestCase):
    def test_plex_price(self):
        results = evecentral.market_stats("30 Day Pilot's License Extension (PLEX)")
        self.assertTrue(results.has_key('maxbuy'))
        self.assertTrue(results.has_key('minsell'))

    def test_plex_price_sinq_laison(self):
        results = evecentral.market_stats("30 Day Pilot's License Extension (PLEX)", 10000032)
        self.assertEqual(results['region'], 10000032)
        self.assertTrue(results.has_key('maxbuy'))
        self.assertTrue(results.has_key('minsell'))

    def test_plex_price_multiple_regions(self):
        results = evecentral.market_stats("30 Day Pilot's License Extension (PLEX)", [10000032, 10000002])
        self.assertEqual(results['region'], [10000032, 10000002])
        self.assertTrue(results.has_key('maxbuy'))
        self.assertTrue(results.has_key('minsell'))

    def test_unknown_item(self):
        exception_thrown = False
        try:
            results = evecentral.market_stats("PLUX")
        except ValueError as e:
            exception_thrown = True
        self.assertTrue(exception_thrown)
        self.assertEqual(e.message, "The item name 'PLUX' is not known to the item type resolver")

if __name__ == '__main__':
    unittest.main()
